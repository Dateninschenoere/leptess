(function() {var implementors = {};
implementors["leptonica_sys"] = [{"text":"impl Copy for __fsid_t","synthetic":false,"types":[]},{"text":"impl Copy for __mbstate_t","synthetic":false,"types":[]},{"text":"impl Copy for __mbstate_t__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Copy for _G_fpos_t","synthetic":false,"types":[]},{"text":"impl Copy for _G_fpos64_t","synthetic":false,"types":[]},{"text":"impl Copy for _IO_marker","synthetic":false,"types":[]},{"text":"impl Copy for _IO_codecvt","synthetic":false,"types":[]},{"text":"impl Copy for _IO_wide_data","synthetic":false,"types":[]},{"text":"impl Copy for _IO_FILE","synthetic":false,"types":[]},{"text":"impl Copy for div_t","synthetic":false,"types":[]},{"text":"impl Copy for ldiv_t","synthetic":false,"types":[]},{"text":"impl Copy for lldiv_t","synthetic":false,"types":[]},{"text":"impl Copy for __sigset_t","synthetic":false,"types":[]},{"text":"impl Copy for timeval","synthetic":false,"types":[]},{"text":"impl Copy for timespec","synthetic":false,"types":[]},{"text":"impl Copy for fd_set","synthetic":false,"types":[]},{"text":"impl Copy for __pthread_rwlock_arch_t","synthetic":false,"types":[]},{"text":"impl Copy for __pthread_internal_list","synthetic":false,"types":[]},{"text":"impl Copy for __pthread_mutex_s","synthetic":false,"types":[]},{"text":"impl Copy for __pthread_cond_s","synthetic":false,"types":[]},{"text":"impl Copy for __pthread_cond_s__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Copy for __pthread_cond_s__bindgen_ty_1__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Copy for __pthread_cond_s__bindgen_ty_2","synthetic":false,"types":[]},{"text":"impl Copy for __pthread_cond_s__bindgen_ty_2__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_barrier_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_barrierattr_t","synthetic":false,"types":[]},{"text":"impl Copy for random_data","synthetic":false,"types":[]},{"text":"impl Copy for drand48_data","synthetic":false,"types":[]},{"text":"impl Copy for L_WallTimer","synthetic":false,"types":[]},{"text":"impl Copy for Numa","synthetic":false,"types":[]},{"text":"impl Copy for Numaa","synthetic":false,"types":[]},{"text":"impl Copy for L_Dna","synthetic":false,"types":[]},{"text":"impl Copy for L_Dnaa","synthetic":false,"types":[]},{"text":"impl Copy for L_DnaHash","synthetic":false,"types":[]},{"text":"impl Copy for Sarray","synthetic":false,"types":[]},{"text":"impl Copy for L_Bytea","synthetic":false,"types":[]},{"text":"impl Copy for L_ByteBuffer","synthetic":false,"types":[]},{"text":"impl Copy for L_Heap","synthetic":false,"types":[]},{"text":"impl Copy for DoubleLinkedList","synthetic":false,"types":[]},{"text":"impl Copy for L_Ptra","synthetic":false,"types":[]},{"text":"impl Copy for L_Ptraa","synthetic":false,"types":[]},{"text":"impl Copy for L_Queue","synthetic":false,"types":[]},{"text":"impl Copy for Rb_Type","synthetic":false,"types":[]},{"text":"impl Copy for L_Rbtree","synthetic":false,"types":[]},{"text":"impl Copy for L_Rbtree_Node","synthetic":false,"types":[]},{"text":"impl Copy for L_Stack","synthetic":false,"types":[]},{"text":"impl Copy for L_Bmf","synthetic":false,"types":[]},{"text":"impl Copy for CCBord","synthetic":false,"types":[]},{"text":"impl Copy for CCBorda","synthetic":false,"types":[]},{"text":"impl Copy for L_Dewarpa","synthetic":false,"types":[]},{"text":"impl Copy for L_Dewarp","synthetic":false,"types":[]},{"text":"impl Copy for GPlot","synthetic":false,"types":[]},{"text":"impl Copy for L_Compressed_Data","synthetic":false,"types":[]},{"text":"impl Copy for L_Pdf_Data","synthetic":false,"types":[]},{"text":"impl Copy for JbClasser","synthetic":false,"types":[]},{"text":"impl Copy for JbData","synthetic":false,"types":[]},{"text":"impl Copy for Sel","synthetic":false,"types":[]},{"text":"impl Copy for Sela","synthetic":false,"types":[]},{"text":"impl Copy for L_Kernel","synthetic":false,"types":[]},{"text":"impl Copy for Pix","synthetic":false,"types":[]},{"text":"impl Copy for PixColormap","synthetic":false,"types":[]},{"text":"impl Copy for RGBA_Quad","synthetic":false,"types":[]},{"text":"impl Copy for Pixa","synthetic":false,"types":[]},{"text":"impl Copy for Pixaa","synthetic":false,"types":[]},{"text":"impl Copy for Box","synthetic":false,"types":[]},{"text":"impl Copy for Boxa","synthetic":false,"types":[]},{"text":"impl Copy for Boxaa","synthetic":false,"types":[]},{"text":"impl Copy for Pta","synthetic":false,"types":[]},{"text":"impl Copy for Ptaa","synthetic":false,"types":[]},{"text":"impl Copy for Pixacc","synthetic":false,"types":[]},{"text":"impl Copy for PixTiling","synthetic":false,"types":[]},{"text":"impl Copy for FPix","synthetic":false,"types":[]},{"text":"impl Copy for FPixa","synthetic":false,"types":[]},{"text":"impl Copy for DPix","synthetic":false,"types":[]},{"text":"impl Copy for PixComp","synthetic":false,"types":[]},{"text":"impl Copy for PixaComp","synthetic":false,"types":[]},{"text":"impl Copy for L_Recog","synthetic":false,"types":[]},{"text":"impl Copy for L_Rch","synthetic":false,"types":[]},{"text":"impl Copy for L_Rcha","synthetic":false,"types":[]},{"text":"impl Copy for L_Rdid","synthetic":false,"types":[]},{"text":"impl Copy for L_RegParams","synthetic":false,"types":[]},{"text":"impl Copy for L_StrCode","synthetic":false,"types":[]},{"text":"impl Copy for L_Sudoku","synthetic":false,"types":[]},{"text":"impl Copy for L_WShed","synthetic":false,"types":[]},{"text":"impl Copy for __va_list_tag","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Copy for Span","synthetic":false,"types":[]},{"text":"impl Copy for Delimiter","synthetic":false,"types":[]},{"text":"impl Copy for Spacing","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Copy for Underscore","synthetic":false,"types":[]},{"text":"impl Copy for Abstract","synthetic":false,"types":[]},{"text":"impl Copy for As","synthetic":false,"types":[]},{"text":"impl Copy for Async","synthetic":false,"types":[]},{"text":"impl Copy for Auto","synthetic":false,"types":[]},{"text":"impl Copy for Await","synthetic":false,"types":[]},{"text":"impl Copy for Become","synthetic":false,"types":[]},{"text":"impl Copy for Box","synthetic":false,"types":[]},{"text":"impl Copy for Break","synthetic":false,"types":[]},{"text":"impl Copy for Const","synthetic":false,"types":[]},{"text":"impl Copy for Continue","synthetic":false,"types":[]},{"text":"impl Copy for Crate","synthetic":false,"types":[]},{"text":"impl Copy for Default","synthetic":false,"types":[]},{"text":"impl Copy for Do","synthetic":false,"types":[]},{"text":"impl Copy for Dyn","synthetic":false,"types":[]},{"text":"impl Copy for Else","synthetic":false,"types":[]},{"text":"impl Copy for Enum","synthetic":false,"types":[]},{"text":"impl Copy for Extern","synthetic":false,"types":[]},{"text":"impl Copy for Final","synthetic":false,"types":[]},{"text":"impl Copy for Fn","synthetic":false,"types":[]},{"text":"impl Copy for For","synthetic":false,"types":[]},{"text":"impl Copy for If","synthetic":false,"types":[]},{"text":"impl Copy for Impl","synthetic":false,"types":[]},{"text":"impl Copy for In","synthetic":false,"types":[]},{"text":"impl Copy for Let","synthetic":false,"types":[]},{"text":"impl Copy for Loop","synthetic":false,"types":[]},{"text":"impl Copy for Macro","synthetic":false,"types":[]},{"text":"impl Copy for Match","synthetic":false,"types":[]},{"text":"impl Copy for Mod","synthetic":false,"types":[]},{"text":"impl Copy for Move","synthetic":false,"types":[]},{"text":"impl Copy for Mut","synthetic":false,"types":[]},{"text":"impl Copy for Override","synthetic":false,"types":[]},{"text":"impl Copy for Priv","synthetic":false,"types":[]},{"text":"impl Copy for Pub","synthetic":false,"types":[]},{"text":"impl Copy for Ref","synthetic":false,"types":[]},{"text":"impl Copy for Return","synthetic":false,"types":[]},{"text":"impl Copy for SelfType","synthetic":false,"types":[]},{"text":"impl Copy for SelfValue","synthetic":false,"types":[]},{"text":"impl Copy for Static","synthetic":false,"types":[]},{"text":"impl Copy for Struct","synthetic":false,"types":[]},{"text":"impl Copy for Super","synthetic":false,"types":[]},{"text":"impl Copy for Trait","synthetic":false,"types":[]},{"text":"impl Copy for Try","synthetic":false,"types":[]},{"text":"impl Copy for Type","synthetic":false,"types":[]},{"text":"impl Copy for Typeof","synthetic":false,"types":[]},{"text":"impl Copy for Union","synthetic":false,"types":[]},{"text":"impl Copy for Unsafe","synthetic":false,"types":[]},{"text":"impl Copy for Unsized","synthetic":false,"types":[]},{"text":"impl Copy for Use","synthetic":false,"types":[]},{"text":"impl Copy for Virtual","synthetic":false,"types":[]},{"text":"impl Copy for Where","synthetic":false,"types":[]},{"text":"impl Copy for While","synthetic":false,"types":[]},{"text":"impl Copy for Yield","synthetic":false,"types":[]},{"text":"impl Copy for Add","synthetic":false,"types":[]},{"text":"impl Copy for AddEq","synthetic":false,"types":[]},{"text":"impl Copy for And","synthetic":false,"types":[]},{"text":"impl Copy for AndAnd","synthetic":false,"types":[]},{"text":"impl Copy for AndEq","synthetic":false,"types":[]},{"text":"impl Copy for At","synthetic":false,"types":[]},{"text":"impl Copy for Bang","synthetic":false,"types":[]},{"text":"impl Copy for Caret","synthetic":false,"types":[]},{"text":"impl Copy for CaretEq","synthetic":false,"types":[]},{"text":"impl Copy for Colon","synthetic":false,"types":[]},{"text":"impl Copy for Colon2","synthetic":false,"types":[]},{"text":"impl Copy for Comma","synthetic":false,"types":[]},{"text":"impl Copy for Div","synthetic":false,"types":[]},{"text":"impl Copy for DivEq","synthetic":false,"types":[]},{"text":"impl Copy for Dollar","synthetic":false,"types":[]},{"text":"impl Copy for Dot","synthetic":false,"types":[]},{"text":"impl Copy for Dot2","synthetic":false,"types":[]},{"text":"impl Copy for Dot3","synthetic":false,"types":[]},{"text":"impl Copy for DotDotEq","synthetic":false,"types":[]},{"text":"impl Copy for Eq","synthetic":false,"types":[]},{"text":"impl Copy for EqEq","synthetic":false,"types":[]},{"text":"impl Copy for Ge","synthetic":false,"types":[]},{"text":"impl Copy for Gt","synthetic":false,"types":[]},{"text":"impl Copy for Le","synthetic":false,"types":[]},{"text":"impl Copy for Lt","synthetic":false,"types":[]},{"text":"impl Copy for MulEq","synthetic":false,"types":[]},{"text":"impl Copy for Ne","synthetic":false,"types":[]},{"text":"impl Copy for Or","synthetic":false,"types":[]},{"text":"impl Copy for OrEq","synthetic":false,"types":[]},{"text":"impl Copy for OrOr","synthetic":false,"types":[]},{"text":"impl Copy for Pound","synthetic":false,"types":[]},{"text":"impl Copy for Question","synthetic":false,"types":[]},{"text":"impl Copy for RArrow","synthetic":false,"types":[]},{"text":"impl Copy for LArrow","synthetic":false,"types":[]},{"text":"impl Copy for Rem","synthetic":false,"types":[]},{"text":"impl Copy for RemEq","synthetic":false,"types":[]},{"text":"impl Copy for FatArrow","synthetic":false,"types":[]},{"text":"impl Copy for Semi","synthetic":false,"types":[]},{"text":"impl Copy for Shl","synthetic":false,"types":[]},{"text":"impl Copy for ShlEq","synthetic":false,"types":[]},{"text":"impl Copy for Shr","synthetic":false,"types":[]},{"text":"impl Copy for ShrEq","synthetic":false,"types":[]},{"text":"impl Copy for Star","synthetic":false,"types":[]},{"text":"impl Copy for Sub","synthetic":false,"types":[]},{"text":"impl Copy for SubEq","synthetic":false,"types":[]},{"text":"impl Copy for Tilde","synthetic":false,"types":[]},{"text":"impl Copy for Brace","synthetic":false,"types":[]},{"text":"impl Copy for Bracket","synthetic":false,"types":[]},{"text":"impl Copy for Paren","synthetic":false,"types":[]},{"text":"impl Copy for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for AttrStyle","synthetic":false,"types":[]},{"text":"impl Copy for BinOp","synthetic":false,"types":[]},{"text":"impl Copy for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Copy for UnOp","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Copy for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]}];
implementors["tesseract_sys"] = [{"text":"impl Copy for TessResultRenderer","synthetic":false,"types":[]},{"text":"impl Copy for TessBaseAPI","synthetic":false,"types":[]},{"text":"impl Copy for TessPageIterator","synthetic":false,"types":[]},{"text":"impl Copy for TessResultIterator","synthetic":false,"types":[]},{"text":"impl Copy for TessMutableIterator","synthetic":false,"types":[]},{"text":"impl Copy for TessChoiceIterator","synthetic":false,"types":[]},{"text":"impl Copy for ETEXT_DESC","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()